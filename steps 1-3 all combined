import pandas as pd
import os

os.chdir("/xdisk/hongxuding/chen/Meta/")
#step 1 (pull columns)
original_file_path= '/xdisk/xiaosun/jinchengyu/OAI/00/Package_1230092/image03.txt' #change beased on what original file is 

df = pd.read_csv(original_file_path, delimiter='\t') 
 
#pick out columns
col_interest= ['collection_id',
               'image03_id',
               'dataset_id',
               'src_subject_id',
               'experiment_id',
               'sex',
               'comments_misc',
               'image_file',
               'image_description',
               #'Sex of subject at birth',
              # 'Age in months at the time of the interview/test/sampling/imaging.'
               #the two that are commented out doesn't exist as an actual column
               ]

specific_df=df[col_interest]

# Specify the output file 
output_file_path = 'subset_data_00month.txt'

# Save the subset DataFrame to a new text file
specific_df.to_csv(output_file_path, sep='\t', index=False)

print("step 1 done")





#step 2 (rename file)
subset_file = 'subset_data_00month.txt'
df = pd.read_csv(subset_file, sep='\t') 

# change directory function
old_directory = 's3://NDAR_Central_3/submission_60350/'
new_directory = 'image03/'

def change_directory(file_path):
    return file_path.replace(old_directory, new_directory)

# Apply the function to change image patha
df['image_file'] = df['image_file'].apply(change_directory)

# save new file as txt
raw_file_name = 'raw_sub_00month.txt'
df.to_csv(raw_file_name, sep='\t', index=False)


print("step 2 done")





#step3 (take out MR)
raw_file_name = 'raw_sub_00month.txt'
df = pd.read_csv(raw_file_name, delimiter='\t', header=0,)

# Print the original column names
#print("Original Column Names:")
#print(df.columns)

#condition to check 
condition = df['comments_misc'].str.contains('MR')

#Filter rows based on the condition 
filtered_df = df[condition]

# Save the filtered DataFrame
filtered_df.to_csv('MR_sub_00month.txt', sep="\t" , index=False)

print("Saved")



#step 4


df = pd.read_csv('MR_sub_00month.txt', delimiter='\t', header=0)

# Define directories
directories =  ["/xdisk/xiaosun/jinchengyu/OAI/12m/Package_1230092", "/xdisk/xiaosun/jinchengyu/OAI/00/Package_1230092"]


# Function to check if the image file exists in any of the directories
def check_file_status_and_update_path(file_path, directories):
    file_name = os.path.basename(file_path)  # Extract the file name from the path
    for directory in directories:
        full_path = os.path.join(directory, file_path)
        #print(file_path)
        print(full_path)
        #print(directory)
        if os.path.isfile(full_path):
            return 'Exists', full_path
    return 'NO', file_path

# Apply the function to the specific column and update it in the DataFrame
df['image_file'] = df['image_file'].apply(
    lambda file_path: check_file_status_and_update_path(file_path, directories)[1]
)

# Create a new column for file status
df['file_status'] = df['image_file'].apply(
    lambda file_path: 'Exists' if any(os.path.isfile(os.path.join(directory, file_path)) for directory in directories) else 'Not Exists'
)

# Save the updated DataFrame to a new CSV file
updated_csv_file_path = 'MR_sub_ex_and_nonexist_00month.txt'  # Replace with your desired output file path
df.to_csv(updated_csv_file_path, sep='\t', index=False)

existing_files_df = df[df['file_status'] == 'Exists']

# Save the filtered DataFrame to a new CSV file
existing_files_csv_file_path = 'MR_sub_ex_00month.txt'  # Replace with your desired output file path
existing_files_df.to_csv(existing_files_csv_file_path, sep='\t', index=False)

print("done")
